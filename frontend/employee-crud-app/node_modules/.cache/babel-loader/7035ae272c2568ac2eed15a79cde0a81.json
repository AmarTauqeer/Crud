{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/DjangoMongodbReactProjects/Crud/frontend/employee-crud-app/src/components/pages/employee/EmployeeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport Button from \"../../Button\";\nimport ReactPaginate from \"react-paginate\";\nimport Input from \"../../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeList = props => {\n  _s();\n\n  const history = useHistory();\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [searchTerms, setSearchTerms] = useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const employeesPerPage = 5;\n  const pagesVisited = pageNumber * employeesPerPage;\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/all_employee/\").then(res => {\n      if (res) {\n        //console.log(res.data);\n        setEmployees(res.data);\n      }\n    }); // get departments\n    // get department name\n\n    axios.get(\"http://127.0.0.1:8000/all_department/\").then(response => {\n      setDepartments(response.data);\n    });\n  }, []);\n\n  if (localStorage.getItem(\"user_name\") === \"\") {\n    return null;\n    history.push({\n      pathname: \"/login\"\n    });\n  } else {\n    const handleChange = e => {\n      setSearchTerms(e.target.value);\n\n      if (searchTerms) {\n        const results = employees.filter(emp => emp.employee_name.toLowerCase().includes(searchTerms));\n        setSearchResults(results);\n      }\n    };\n\n    const handleAdd = () => {\n      history.push({\n        pathname: \"/add_employee/\"\n      });\n    };\n\n    const editHandleClick = id => {\n      //console.log(id);\n      history.push({\n        pathname: \"/update_employee/\" + id\n      });\n    };\n\n    const handleDelete = id => {\n      axios.delete(\"http://127.0.0.1:8000/delete_employee/\" + id).then(res => {\n        if (res) {\n          window.location.reload();\n        }\n      });\n    };\n\n    let employee = [];\n\n    if (searchTerms) {\n      employee = searchResults;\n    } else {\n      employee = employees;\n    }\n\n    const displayEmployees = employee.slice(pagesVisited, pagesVisited + employeesPerPage).map((emp, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: emp.employee_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: departments.filter(dpt => dpt.id === emp.department).map(filteredName => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: filteredName.department_name\n          }, filteredName.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: emp.date_of_birth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: emp.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: emp.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"btn btn-primary btn-sm m-1\",\n            label: \"Edit\",\n            onClick: e => editHandleClick(emp.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"btn btn-danger btn-sm m-1\",\n            label: \"Delete\",\n            onClick: e => handleDelete(emp.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this);\n    });\n    const pageCount = Math.ceil(employees.length / employeesPerPage);\n\n    const changePage = ({\n      selected\n    }) => {\n      setPageNumber(selected);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: localStorage.getItem(\"user_name\") && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"btn btn-success btn-sm\",\n            onClick: handleAdd,\n            label: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Search:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control form-control-md\",\n            handleChange: handleChange,\n            placeholder: \"Enter employee name\",\n            value: searchTerms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          style: {\n            fontWeight: \"bold\",\n            fontStyle: \"italic\"\n          },\n          children: \"Emp.Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          style: {\n            fontWeight: \"bold\",\n            fontStyle: \"italic\"\n          },\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          style: {\n            fontWeight: \"bold\",\n            fontStyle: \"italic\"\n          },\n          children: \"Dob\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          style: {\n            fontWeight: \"bold\",\n            fontStyle: \"italic\"\n          },\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          style: {\n            fontWeight: \"bold\",\n            fontStyle: \"italic\"\n          },\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          style: {\n            fontWeight: \"bold\",\n            fontStyle: \"italic\"\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), localStorage.getItem(\"user_name\") && displayEmployees, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        pageCount: pageCount,\n        onPageChange: changePage,\n        containerClassName: \"paginationBttns\",\n        previousLinkClassName: \"previousBttn\",\n        nextLinkClassName: \"nextBttn\",\n        disabledClassName: \"paginationDisabled\",\n        activeClassName: \"paginationActive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(EmployeeList, \"bUaOys8FQ4DxDt6yFM5KTmFO1rI=\", false, function () {\n  return [useHistory];\n});\n\n_c = EmployeeList;\nexport default EmployeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["/home/amar/D/Projects/DjangoMongodbReactProjects/Crud/frontend/employee-crud-app/src/components/pages/employee/EmployeeList.js"],"names":["React","useState","useEffect","axios","useHistory","Button","ReactPaginate","Input","EmployeeList","props","history","departments","setDepartments","employees","setEmployees","pageNumber","setPageNumber","searchTerms","setSearchTerms","searchResults","setSearchResults","employeesPerPage","pagesVisited","get","then","res","data","response","localStorage","getItem","push","pathname","handleChange","e","target","value","results","filter","emp","employee_name","toLowerCase","includes","handleAdd","editHandleClick","id","handleDelete","delete","window","location","reload","employee","displayEmployees","slice","map","index","dpt","department","filteredName","department_name","date_of_birth","address","phone","pageCount","Math","ceil","length","changePage","selected","fontWeight","fontStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCpB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1C;AAEA,QAAMoB,gBAAgB,GAAG,CAAzB;AACA,QAAMC,YAAY,GAAGP,UAAU,GAAGM,gBAAlC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACoB,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAuDC,GAAD,IAAS;AAC7D,UAAIA,GAAJ,EAAS;AACP;AACAX,QAAAA,YAAY,CAACW,GAAG,CAACC,IAAL,CAAZ;AACD;AACF,KALD,EADc,CAOd;AACA;;AACAvB,IAAAA,KAAK,CAACoB,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAAyDG,QAAD,IAAc;AACpEf,MAAAA,cAAc,CAACe,QAAQ,CAACD,IAAV,CAAd;AACD,KAFD;AAGD,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAIE,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,EAA1C,EAA8C;AAC5C,WAAO,IAAP;AACAnB,IAAAA,OAAO,CAACoB,IAAR,CAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GALD,MAKO;AACL,UAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1Bf,MAAAA,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;;AAEA,UAAIlB,WAAJ,EAAiB;AACf,cAAMmB,OAAO,GAAGvB,SAAS,CAACwB,MAAV,CAAkBC,GAAD,IAC/BA,GAAG,CAACC,aAAJ,CAAkBC,WAAlB,GAAgCC,QAAhC,CAAyCxB,WAAzC,CADc,CAAhB;AAGAG,QAAAA,gBAAgB,CAACgB,OAAD,CAAhB;AACD;AACF,KATD;;AAWA,UAAMM,SAAS,GAAG,MAAM;AACtBhC,MAAAA,OAAO,CAACoB,IAAR,CAAa;AACXC,QAAAA,QAAQ,EAAE;AADC,OAAb;AAGD,KAJD;;AAMA,UAAMY,eAAe,GAAIC,EAAD,IAAQ;AAC9B;AACAlC,MAAAA,OAAO,CAACoB,IAAR,CAAa;AACXC,QAAAA,QAAQ,EAAE,sBAAsBa;AADrB,OAAb;AAGD,KALD;;AAOA,UAAMC,YAAY,GAAID,EAAD,IAAQ;AAC3BzC,MAAAA,KAAK,CACF2C,MADH,CACU,2CAA2CF,EADrD,EAEGpB,IAFH,CAESC,GAAD,IAAS;AACb,YAAIA,GAAJ,EAAS;AACPsB,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,OANH;AAOD,KARD;;AAUA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIjC,WAAJ,EAAiB;AACfiC,MAAAA,QAAQ,GAAG/B,aAAX;AACD,KAFD,MAEO;AACL+B,MAAAA,QAAQ,GAAGrC,SAAX;AACD;;AACD,UAAMsC,gBAAgB,GAAGD,QAAQ,CAC9BE,KADsB,CAChB9B,YADgB,EACFA,YAAY,GAAGD,gBADb,EAEtBgC,GAFsB,CAElB,CAACf,GAAD,EAAMgB,KAAN,KAAgB;AACnB,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BhB,GAAG,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACG5B,WAAW,CACT0B,MADF,CACUkB,GAAD,IAASA,GAAG,CAACX,EAAJ,KAAWN,GAAG,CAACkB,UADjC,EAEEH,GAFF,CAEOI,YAAD,iBACH;AAAA,sBACGA,YAAY,CAACC;AADhB,aAAUD,YAAY,CAACb,EAAvB;AAAA;AAAA;AAAA;AAAA,kBAHH;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BN,GAAG,CAACqB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BrB,GAAG,CAACsB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BtB,GAAG,CAACuB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,4BAFZ;AAGE,YAAA,KAAK,EAAC,MAHR;AAIE,YAAA,OAAO,EAAG5B,CAAD,IAAOU,eAAe,CAACL,GAAG,CAACM,EAAL;AAJjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,KAAK,EAAC,QAHR;AAIE,YAAA,OAAO,EAAGX,CAAD,IAAOY,YAAY,CAACP,GAAG,CAACM,EAAL;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA,SAA0BU,KAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KAlCsB,CAAzB;AAoCA,UAAMQ,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUnD,SAAS,CAACoD,MAAV,GAAmB5C,gBAA7B,CAAlB;;AAEA,UAAM6C,UAAU,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACnCnD,MAAAA,aAAa,CAACmD,QAAD,CAAb;AACD,KAFD;;AAIA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACGvC,YAAY,CAACC,OAAb,CAAqB,WAArB,kBACC,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,wBAFZ;AAGE,YAAA,OAAO,EAAEa,SAHX;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAeE;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,8BAFZ;AAGE,YAAA,YAAY,EAAEV,YAHhB;AAIE,YAAA,WAAW,EAAC,qBAJd;AAKE,YAAA,KAAK,EAAEf;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eA8BE;AAAA;AAAA;AAAA;AAAA,cA9BF,eA+BE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,KAAK,EAAE;AAAEmD,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,KAAK,EAAE;AAAED,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAcE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,KAAK,EAAE;AAAED,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAoBE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,KAAK,EAAE;AAAED,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,eA0BE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,KAAK,EAAE;AAAED,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAiCE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,KAAK,EAAE;AAAED,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF,eAuEE;AAAA;AAAA;AAAA;AAAA,cAvEF,EAwEGzC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqCsB,gBAxExC,eAyEE;AAAA;AAAA;AAAA;AAAA,cAzEF,eA0EE,QAAC,aAAD;AACE,QAAA,aAAa,EAAE,UADjB;AAEE,QAAA,SAAS,EAAE,MAFb;AAGE,QAAA,SAAS,EAAEW,SAHb;AAIE,QAAA,YAAY,EAAEI,UAJhB;AAKE,QAAA,kBAAkB,EAAE,iBALtB;AAME,QAAA,qBAAqB,EAAE,cANzB;AAOE,QAAA,iBAAiB,EAAE,UAPrB;AAQE,QAAA,iBAAiB,EAAE,oBARrB;AASE,QAAA,eAAe,EAAE;AATnB;AAAA;AAAA;AAAA;AAAA,cA1EF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwFD;AACF,CA7MD;;GAAM1D,Y;UACYJ,U;;;KADZI,Y;AA+MN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport Button from \"../../Button\";\nimport ReactPaginate from \"react-paginate\";\nimport Input from \"../../Input\";\n\nconst EmployeeList = (props) => {\n  const history = useHistory();\n\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  const [pageNumber, setPageNumber] = useState(0);\n\n  const [searchTerms, setSearchTerms] = useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  const employeesPerPage = 5;\n  const pagesVisited = pageNumber * employeesPerPage;\n\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/all_employee/\").then((res) => {\n      if (res) {\n        //console.log(res.data);\n        setEmployees(res.data);\n      }\n    });\n    // get departments\n    // get department name\n    axios.get(\"http://127.0.0.1:8000/all_department/\").then((response) => {\n      setDepartments(response.data);\n    });\n  }, []);\n\n  if (localStorage.getItem(\"user_name\") === \"\") {\n    return null;\n    history.push({\n      pathname: \"/login\",\n    });\n  } else {\n    const handleChange = (e) => {\n      setSearchTerms(e.target.value);\n\n      if (searchTerms) {\n        const results = employees.filter((emp) =>\n          emp.employee_name.toLowerCase().includes(searchTerms)\n        );\n        setSearchResults(results);\n      }\n    };\n\n    const handleAdd = () => {\n      history.push({\n        pathname: \"/add_employee/\",\n      });\n    };\n\n    const editHandleClick = (id) => {\n      //console.log(id);\n      history.push({\n        pathname: \"/update_employee/\" + id,\n      });\n    };\n\n    const handleDelete = (id) => {\n      axios\n        .delete(\"http://127.0.0.1:8000/delete_employee/\" + id)\n        .then((res) => {\n          if (res) {\n            window.location.reload();\n          }\n        });\n    };\n\n    let employee = [];\n    if (searchTerms) {\n      employee = searchResults;\n    } else {\n      employee = employees;\n    }\n    const displayEmployees = employee\n      .slice(pagesVisited, pagesVisited + employeesPerPage)\n      .map((emp, index) => {\n        return (\n          <div className=\"row\" key={index}>\n            <div className=\"col-md-2\">{emp.employee_name}</div>\n            <div className=\"col-md-2\">\n              {departments\n                .filter((dpt) => dpt.id === emp.department)\n                .map((filteredName) => (\n                  <div key={filteredName.id}>\n                    {filteredName.department_name}\n                  </div>\n                ))}\n            </div>\n            <div className=\"col-md-1\">{emp.date_of_birth}</div>\n            <div className=\"col-md-2\">{emp.address}</div>\n            <div className=\"col-md-2\">{emp.phone}</div>\n            <div className=\"col-md-3\">\n              <Button\n                type=\"button\"\n                className=\"btn btn-primary btn-sm m-1\"\n                label=\"Edit\"\n                onClick={(e) => editHandleClick(emp.id)}\n              />\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger btn-sm m-1\"\n                label=\"Delete\"\n                onClick={(e) => handleDelete(emp.id)}\n              />\n            </div>\n          </div>\n        );\n      });\n\n    const pageCount = Math.ceil(employees.length / employeesPerPage);\n\n    const changePage = ({ selected }) => {\n      setPageNumber(selected);\n    };\n\n    return (\n      <div>\n        <h6>Employee</h6>\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-md-1\">\n            {localStorage.getItem(\"user_name\") && (\n              <Button\n                type=\"button\"\n                className=\"btn btn-success btn-sm\"\n                onClick={handleAdd}\n                label=\"Add\"\n              />\n            )}\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <label>Search:</label>\n          </div>\n          <div className=\"col-md-5\">\n            <Input\n              type=\"text\"\n              className=\"form-control form-control-md\"\n              handleChange={handleChange}\n              placeholder=\"Enter employee name\"\n              value={searchTerms}\n            />\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div\n            className=\"col-md-2\"\n            style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}\n          >\n            Emp.Name\n          </div>\n\n          <div\n            className=\"col-md-2\"\n            style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}\n          >\n            Department\n          </div>\n          <div\n            className=\"col-md-1\"\n            style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}\n          >\n            Dob\n          </div>\n          <div\n            className=\"col-md-2\"\n            style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}\n          >\n            Address\n          </div>\n          <div\n            className=\"col-md-2\"\n            style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}\n          >\n            Phone\n          </div>\n\n          <div\n            className=\"col-md-3\"\n            style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}\n          >\n            Actions\n          </div>\n        </div>\n        <br />\n        {localStorage.getItem(\"user_name\") && displayEmployees}\n        <br />\n        <ReactPaginate\n          previousLabel={\"Previous\"}\n          nextLabel={\"Next\"}\n          pageCount={pageCount}\n          onPageChange={changePage}\n          containerClassName={\"paginationBttns\"}\n          previousLinkClassName={\"previousBttn\"}\n          nextLinkClassName={\"nextBttn\"}\n          disabledClassName={\"paginationDisabled\"}\n          activeClassName={\"paginationActive\"}\n        />\n      </div>\n    );\n  }\n};\n\nexport default EmployeeList;\n"]},"metadata":{},"sourceType":"module"}